<template>
  <div class="circle" style="width:{{radius*2}};height:{{radius*2}};border-radius:{{radius}}">
    <div class="left-wrap" style="width:{{radius}};height:{{radius*2}};left:0;">
      <div class="loader" id="id1" style="left:{{radius}};width:{{radius}};height:{{radius*2}};border-top-left-radius:0;border-bottom-left-radius:0;background-color:{{color}};"></div>
    </div>
    <div class="right-wrap" style="width:{{radius}};height:{{radius*2}};left:{{radius}};">
      <div class="loader" id="id2"  style="left:{{-radius}};width:{{radius}};height:{{radius*2}};border-top-right-radius:0;border-bottom-right-radius:0;background-color:{{color}};"></div>
    </div>
    <div class="inner-circle" style="width:{{(radius - borderWidth)*2}};height:{{(radius - borderWidth)*2}};border-radius:{{radius - borderWidth}};background-color: #fff;">
       <Text style="color:{{textColor}}">{{percent}}%</Text>
    </div>
  </div>
</template>

<script>
  var animation = require('@weex-module/animation');
  export default {
    data() {
      return {
        radius: 100,
        color: '#1ba1e2',
  
        borderWidth: 2,
        percent: 0,
        textColor: '#000',
      } 
    },
    
    methods: {
      anim: function(targte,styles, timingFunction, duration, callback) {
        
        let el = this.$el(targte);
        animation.transition( el, {
          styles: styles,
          timingFunction: timingFunction,
          duration: duration
        }, callback)
      },  
      
    },
    ready() {
      let leftTransformerDegree = '0deg';
      let rightTransformerDegree = '0deg';
      if(this.percent >= 50) {
        rightTransformerDegree = '180deg';
        leftTransformerDegree = (this.percent-50)*3.6 + 'deg';
      }else {
        rightTransformerDegree = this.percent * 3.6 + 'deg'; 
      }
      
      var self = this;
      self.anim('id1',{
        transform: 'rotate('+ leftTransformerDegree +')',
        transformOrigin: '0 50%' ,
      }, 'ease-in-out', 500, function() {
      });
      self.anim('id2',{
        transform: 'rotate('+ rightTransformerDegree +')',
        transformOrigin: '100% 50%',
      }, 'ease-in-out', 500, function() {
      });
      if(this.borderWidth<=2) {
        this.borderWidth = 2;
      }
    
    }
    
  }
</script>

<style>
   .circle{
    overflow: hidden;
    position: relative;
    justify-content: center;
    align-items: center;
    background-color:#e3e3e3;
  }
  .left-wrap{
    overflow: hidden;
    position: absolute;
    top:0;
  }
  .right-wrap {
    overflow: hidden;
    position: absolute;
    top:0;
  }
    
  .loader{
    position:absolute;
    left:0;
    top:0;
    border-radius:1000;
  }
  .loader2{
    position:absolute;
    left:0;
    top:0;
    border-radius:1000;
  }
  
  .inner-circle {
    position: relative;
    justify-content: center;
    align-items: center;
  }
  .text {
    font-size: 11;
    color: #888;
  }
</style>