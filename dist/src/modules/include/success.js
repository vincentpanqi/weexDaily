!function(t){function e(i){if(n[i])return n[i].exports;var s=n[i]={exports:{},id:i,loaded:!1};return t[i].call(s.exports,s,s.exports,e),s.loaded=!0,s.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}({0:function(t,e,n){var i=n(219),s=n(220),o=n(221);__weex_define__("@weex-component/672bed424fc5593155b3e367d08f1a70",[],function(t,e,n){o(n,e,t),e.__esModule&&e.default&&(n.exports=e.default),n.exports.template=i,n.exports.style=s}),__weex_bootstrap__("@weex-component/672bed424fc5593155b3e367d08f1a70",void 0,void 0)},206:function(t,e,n){var i=n(207),s=n(208),o=n(209);__weex_define__("@weex-component/unit",[],function(t,e,n){o(n,e,t),e.__esModule&&e.default&&(n.exports=e.default),n.exports.template=i,n.exports.style=s})},207:function(t,e){t.exports={type:"div",classList:["unit-box"],children:[{type:"text",classList:["unit-number"],style:{fontSize:function(){return this.numberSize}},attr:{value:function(){return this.number}}},{type:"text",classList:["unit-text"],attr:{value:function(){return this.label}}}]}},208:function(t,e){t.exports={"unit-box":{flexDirection:"row",justifyContent:"center",alignItems:"flex-end"},"unit-number":{display:"inline-block",fontSize:50,color:"#111111"},"unit-text":{fontSize:22,color:"#333333",paddingLeft:20,justifyContent:"flex-end",alignItems:"flex-end"}}},209:function(t,e){t.exports=function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={}}},219:function(t,e){t.exports={type:"div",classList:["success"],children:[{type:"div",classList:["success-data"],children:[{type:"div",classList:["distance-wrap"],children:[{type:"text",classList:["distance"],attr:{value:function(){return this.data.miles}}},{type:"text",classList:["unit"],attr:{value:"公里"}}]},{type:"div",classList:["dashboard"],children:[{type:"div",classList:["dashboard-item"],children:[{type:"div",classList:["time-wrap"],children:[{type:"text",classList:["dashboard-title"],attr:{value:"运动时间"}},{type:"text",classList:["number-lg"],attr:{value:function(){return this.data.time}}}]}]},{type:"div",classList:["dashboard-item"],children:[{type:"text",classList:["dashboard-title"],attr:{value:"热量"}},{type:"text",classList:["number-lg"],attr:{value:function(){return this.data.calories}}}]}]}]},{type:"div",style:{alignItems:"center"},children:[{type:"div",classList:["btn-leave"],events:{click:"pop"},children:[{type:"text",classList:["btn-leave-text"],attr:{value:"确认完成"}}]}]}]}},220:function(t,e){t.exports={success:{zIndex:10002,position:"absolute",top:0,bottom:0,left:0,right:0,backgroundColor:"rgba(0,0,0,0.85)",justifyContent:"center"},"distance-wrap":{flexDirection:"row",justifyContent:"center",alignItems:"center"},distance:{display:"inline-block",fontSize:220,color:"#ffffff"},unit:{fontSize:22,color:"#cccccc",paddingTop:30,paddingLeft:20},dashboard:{flexDirection:"row",alignItems:"center"},"dashboard-title":{color:"#999999",fontSize:25,marginBottom:20},"dashboard-item":{flex:1,paddingLeft:40,justifyContent:"center",alignItems:"center"},"number-lg":{fontSize:50,color:"#ffffff"},"btn-leave":{width:400,padding:20,marginTop:60,borderWidth:4,borderColor:"#ffffff",alignItems:"center",borderRadius:10},"btn-leave-text":{color:"#ffffff"}}},221:function(t,e,n){t.exports=function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),n(206);var s=i("@weex-module/navigator");e.default={methods:{pop:function(){s.pop()}}}}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,